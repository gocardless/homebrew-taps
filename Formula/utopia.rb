# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
require_relative "../lib/gc/github_private_release_download_strategy"
class Utopia < Formula
  desc "GoCardless Platform toolkit"
  homepage "https://github.com/gocardless/utopia"
  version "32.3.1"

  depends_on "argocd"
  depends_on "bash"
  depends_on "fzf"
  depends_on "kubernetes-cli"
  depends_on "yq"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/gocardless/utopia/releases/download/v32.3.1/utopia_32.3.1_darwin_arm64.tar.gz", using: Gc::GithubPrivateReleaseDownloadStrategy
      sha256 "580c783fa2fbc20c336e090b19d17493668bdd1ee161d1999bbc0cc4b94a5eaa"

      def install
        bin.install "utopia"

        # Install shell auto-completion
        (bash_completion/"utopia").write(Utils.popen_read("#{bin}/utopia --completion-script-bash"))
        (zsh_completion/"_utopia").write(Utils.popen_read("#{bin}/utopia --completion-script-zsh").strip)
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/gocardless/utopia/releases/download/v32.3.1/utopia_32.3.1_darwin_amd64.tar.gz", using: Gc::GithubPrivateReleaseDownloadStrategy
      sha256 "67c2a92d17f629284517bcb10ab8753f10d80ae7e509feaf25800b595939ed55"

      def install
        bin.install "utopia"

        # Install shell auto-completion
        (bash_completion/"utopia").write(Utils.popen_read("#{bin}/utopia --completion-script-bash"))
        (zsh_completion/"_utopia").write(Utils.popen_read("#{bin}/utopia --completion-script-zsh").strip)
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/gocardless/utopia/releases/download/v32.3.1/utopia_32.3.1_linux_amd64.tar.gz", using: Gc::GithubPrivateReleaseDownloadStrategy
      sha256 "3da9c557f3dd28e746c4fe51d13b6f484d66dfff822b3f45c0daa084600f12f4"

      def install
        bin.install "utopia"

        # Install shell auto-completion
        (bash_completion/"utopia").write(Utils.popen_read("#{bin}/utopia --completion-script-bash"))
        (zsh_completion/"_utopia").write(Utils.popen_read("#{bin}/utopia --completion-script-zsh").strip)
      end
    end
  end

  def caveats
    <<~EOS
      Check https://github.com/gocardless/utopia for how to configure utopia
    EOS
  end

  test do
    system "#{bin}/utopia version"
  end
end
