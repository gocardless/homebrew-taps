# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
require_relative "../lib/gc/github_private_release_download_strategy"
class Utopia < Formula
  desc "GoCardless Platform toolkit"
  homepage "https://github.com/gocardless/utopia"
  version "32.3.0"

  depends_on "argocd"
  depends_on "bash"
  depends_on "fzf"
  depends_on "kubernetes-cli"
  depends_on "yq"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/gocardless/utopia/releases/download/v32.3.0/utopia_32.3.0_darwin_amd64.tar.gz", using: Gc::GithubPrivateReleaseDownloadStrategy
      sha256 "12b97d19e0dd8f9ef0bf1496ca178e3fe36d9ad47dd54da111f72fd6c5a63e72"

      def install
        bin.install "utopia"

        # Install shell auto-completion
        (bash_completion/"utopia").write(Utils.popen_read("#{bin}/utopia --completion-script-bash"))
        (zsh_completion/"_utopia").write(Utils.popen_read("#{bin}/utopia --completion-script-zsh").strip)
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/gocardless/utopia/releases/download/v32.3.0/utopia_32.3.0_darwin_arm64.tar.gz", using: Gc::GithubPrivateReleaseDownloadStrategy
      sha256 "f2fb5d363322b76fa4c1612fe8431a1c95ae7d99751d38a3f55b9371e69032d3"

      def install
        bin.install "utopia"

        # Install shell auto-completion
        (bash_completion/"utopia").write(Utils.popen_read("#{bin}/utopia --completion-script-bash"))
        (zsh_completion/"_utopia").write(Utils.popen_read("#{bin}/utopia --completion-script-zsh").strip)
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/gocardless/utopia/releases/download/v32.3.0/utopia_32.3.0_linux_amd64.tar.gz", using: Gc::GithubPrivateReleaseDownloadStrategy
      sha256 "c89e862b98a9094e8d291eda2f0a22d437b3cd289d9a8bdaf342040b6a84facb"

      def install
        bin.install "utopia"

        # Install shell auto-completion
        (bash_completion/"utopia").write(Utils.popen_read("#{bin}/utopia --completion-script-bash"))
        (zsh_completion/"_utopia").write(Utils.popen_read("#{bin}/utopia --completion-script-zsh").strip)
      end
    end
  end

  def caveats
    <<~EOS
      Check https://github.com/gocardless/utopia for how to configure utopia
    EOS
  end

  test do
    system "#{bin}/utopia version"
  end
end
