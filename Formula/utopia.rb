# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
require_relative "../lib/gc/github_private_release_download_strategy"
class Utopia < Formula
  desc "GoCardless Platform toolkit"
  homepage "https://github.com/gocardless/utopia"
  version "32.1.0"

  depends_on "argocd"
  depends_on "bash"
  depends_on "fzf"
  depends_on "kubernetes-cli"
  depends_on "yq"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/gocardless/utopia/releases/download/v32.1.0/utopia_32.1.0_darwin_arm64.tar.gz", using: Gc::GithubPrivateReleaseDownloadStrategy
      sha256 "3f6f43feaab9e53c69a8ebddcaf65c1f9d556e5d2a97b7e2f7ed74cfff352d2c"

      def install
        bin.install "utopia"

        # Install shell auto-completion
        (bash_completion/"utopia").write(Utils.popen_read("#{bin}/utopia --completion-script-bash"))
        (zsh_completion/"_utopia").write(Utils.popen_read("#{bin}/utopia --completion-script-zsh").strip)
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/gocardless/utopia/releases/download/v32.1.0/utopia_32.1.0_darwin_amd64.tar.gz", using: Gc::GithubPrivateReleaseDownloadStrategy
      sha256 "b1f448a3f556e37481bbd9f3ad43e2b68dbe41d48b3cf1eabeb10b5a4ff6d9c0"

      def install
        bin.install "utopia"

        # Install shell auto-completion
        (bash_completion/"utopia").write(Utils.popen_read("#{bin}/utopia --completion-script-bash"))
        (zsh_completion/"_utopia").write(Utils.popen_read("#{bin}/utopia --completion-script-zsh").strip)
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/gocardless/utopia/releases/download/v32.1.0/utopia_32.1.0_linux_amd64.tar.gz", using: Gc::GithubPrivateReleaseDownloadStrategy
      sha256 "ef3a5e6f945ebc4b920b08068f34a7f6f4f00c688f6858160d308d1670c9ca0c"

      def install
        bin.install "utopia"

        # Install shell auto-completion
        (bash_completion/"utopia").write(Utils.popen_read("#{bin}/utopia --completion-script-bash"))
        (zsh_completion/"_utopia").write(Utils.popen_read("#{bin}/utopia --completion-script-zsh").strip)
      end
    end
  end

  def caveats
    <<~EOS
      Check https://github.com/gocardless/utopia for how to configure utopia
    EOS
  end

  test do
    system "#{bin}/utopia version"
  end
end
