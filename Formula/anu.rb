# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
require_relative "../lib/gc/github_private_release_download_strategy"
class Anu < Formula
  desc "GoCardless Platform toolkit"
  homepage "https://github.com/gocardless/anu"
  version "33.0.0"

  depends_on "argocd"
  depends_on "bash"
  depends_on "fzf"
  depends_on "gocardless/taps/utopia"
  depends_on "kubernetes-cli"
  depends_on "yq"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/gocardless/anu/releases/download/v33.0.0/anu_33.0.0_darwin_amd64.tar.gz", using: Gc::GithubPrivateReleaseDownloadStrategy
      sha256 "861880b31cb5260b1997c1168f61022ffdd43a07b469561c2d49b613103786c6"

      def install
        bin.install "anu"

        # Install shell auto-completion
        (bash_completion/"anu").write(Utils.popen_read("#{bin}/anu completion bash"))
        (zsh_completion/"_anu").write(Utils.popen_read("#{bin}/anu completion zsh"))
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/gocardless/anu/releases/download/v33.0.0/anu_33.0.0_darwin_arm64.tar.gz", using: Gc::GithubPrivateReleaseDownloadStrategy
      sha256 "b27e5585265e9b1b06cd3bfdc1a9d5d22af6945291068c60ca386d6a9c02e836"

      def install
        bin.install "anu"

        # Install shell auto-completion
        (bash_completion/"anu").write(Utils.popen_read("#{bin}/anu completion bash"))
        (zsh_completion/"_anu").write(Utils.popen_read("#{bin}/anu completion zsh"))
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/gocardless/anu/releases/download/v33.0.0/anu_33.0.0_linux_amd64.tar.gz", using: Gc::GithubPrivateReleaseDownloadStrategy
      sha256 "2421a782d73ffbe7e3a9613c6ab6413c24e713764f01eb07d348ba9f8be0e64d"

      def install
        bin.install "anu"

        # Install shell auto-completion
        (bash_completion/"anu").write(Utils.popen_read("#{bin}/anu completion bash"))
        (zsh_completion/"_anu").write(Utils.popen_read("#{bin}/anu completion zsh"))
      end
    end
  end

  def caveats
    <<~EOS
      Check https://github.com/gocardless/anu for how to configure anu
    EOS
  end

  test do
    system "#{bin}/anu version"
  end
end
