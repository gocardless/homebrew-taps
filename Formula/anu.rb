# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
require_relative "../lib/gc/github_private_release_download_strategy"
class Anu < Formula
  desc "GoCardless Platform toolkit"
  homepage "https://github.com/gocardless/anu"
  version "27.3.0"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/gocardless/anu/releases/download/v27.3.0/anu_27.3.0_darwin_amd64.tar.gz", :using => Gc::GithubPrivateReleaseDownloadStrategy
      sha256 "5840d417874c23139a877e374d691fae955971aa5a5053a2676228b6d091fd8e"
    end
    if Hardware::CPU.arm?
      url "https://github.com/gocardless/anu/releases/download/v27.3.0/anu_27.3.0_darwin_arm64.tar.gz", :using => Gc::GithubPrivateReleaseDownloadStrategy
      sha256 "f5869a712aee32c4b53efc8745896d0a3102e4a6f1527ffa0b069d6df39240ab"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/gocardless/anu/releases/download/v27.3.0/anu_27.3.0_linux_amd64.tar.gz", :using => Gc::GithubPrivateReleaseDownloadStrategy
      sha256 "7e90e7b0c35290c391231c8c61628c0d43b8edc595aa6efdfaf1e2d002898483"
    end
  end

  depends_on "kubernetes-cli"
  depends_on "fzf"
  depends_on "argocd"

  def install
    bin.install "anu"
    bin.install "utopia"

    # Install shell auto-completion
    (bash_completion/"anu").write(Utils.popen_read("#{bin}/anu completion bash"))
    (zsh_completion/"_anu").write(Utils.popen_read("#{bin}/anu completion zsh"))
    (bash_completion/"utopia").write(Utils.popen_read("#{bin}/utopia --completion-script-bash"))
    (zsh_completion/"_utopia").write(Utils.popen_read("#{bin}/utopia --completion-script-zsh").strip)
  end

  def caveats; <<~EOS
    Check https://github.com/gocardless/anu for how to configure anu
  EOS
  end

  test do
    system "#{bin}/anu version"
  end
end
