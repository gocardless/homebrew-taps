# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
require_relative "../lib/gc/github_private_release_download_strategy"
class Anu < Formula
  desc "GoCardless Platform toolkit"
  homepage "https://github.com/gocardless/anu"
  version "27.1.4"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/gocardless/anu/releases/download/v27.1.4/anu_27.1.4_darwin_amd64.tar.gz", :using => Gc::GithubPrivateReleaseDownloadStrategy
      sha256 "8b2215dde17dd4a549746c9a29db54201997e95d9d97ce0c99ebc1cc460c6fa4"
    end
    if Hardware::CPU.arm?
      url "https://github.com/gocardless/anu/releases/download/v27.1.4/anu_27.1.4_darwin_arm64.tar.gz", :using => Gc::GithubPrivateReleaseDownloadStrategy
      sha256 "279d4da7a98fe2bc820ece4dbdb4237c53e0038177bff61414c425e0d0fbe2c4"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/gocardless/anu/releases/download/v27.1.4/anu_27.1.4_linux_amd64.tar.gz", :using => Gc::GithubPrivateReleaseDownloadStrategy
      sha256 "e322fd50c93b501f5a510a53c37e3f6c6d20dab18ffffccb3fd46c8909b12b6c"
    end
  end

  depends_on "kubernetes-cli"
  depends_on "fzf"
  depends_on "argocd"

  def install
    bin.install "anu"
    bin.install "utopia"

    # Install shell auto-completion
    (bash_completion/"anu").write(Utils.popen_read("#{bin}/anu completion bash"))
    (zsh_completion/"_anu").write(Utils.popen_read("#{bin}/anu completion zsh"))
    (bash_completion/"utopia").write(Utils.popen_read("#{bin}/utopia --completion-script-bash"))
    (zsh_completion/"_utopia").write(Utils.popen_read("#{bin}/utopia --completion-script-zsh").strip)
  end

  def caveats; <<~EOS
    Check https://github.com/gocardless/anu for how to configure anu
  EOS
  end

  test do
    system "#{bin}/anu version"
  end
end
