# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
require_relative "../lib/gc/github_private_release_download_strategy"
class Anu < Formula
  desc "GoCardless Platform toolkit"
  homepage "https://github.com/gocardless/anu"
  version "32.0.0"

  depends_on "argocd"
  depends_on "bash"
  depends_on "fzf"
  depends_on "gocardless/taps/utopia"
  depends_on "kubernetes-cli"
  depends_on "yq"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/gocardless/anu/releases/download/v32.0.0/anu_32.0.0_darwin_arm64.tar.gz", using: Gc::GithubPrivateReleaseDownloadStrategy
      sha256 "08edcbb48a025e144a8ccc2a20e22142848e5d4cb90c6d6149210b8ecc49ca39"

      def install
        bin.install "anu"

        # Install shell auto-completion
        (bash_completion/"anu").write(Utils.popen_read("#{bin}/anu completion bash"))
        (zsh_completion/"_anu").write(Utils.popen_read("#{bin}/anu completion zsh"))
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/gocardless/anu/releases/download/v32.0.0/anu_32.0.0_darwin_amd64.tar.gz", using: Gc::GithubPrivateReleaseDownloadStrategy
      sha256 "4bfc11e6db4eedb9fec1cb1539251a77fad6545510b39bdc9fa2eb5dd31a3e7a"

      def install
        bin.install "anu"

        # Install shell auto-completion
        (bash_completion/"anu").write(Utils.popen_read("#{bin}/anu completion bash"))
        (zsh_completion/"_anu").write(Utils.popen_read("#{bin}/anu completion zsh"))
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/gocardless/anu/releases/download/v32.0.0/anu_32.0.0_linux_amd64.tar.gz", using: Gc::GithubPrivateReleaseDownloadStrategy
      sha256 "6fce92beca9bb8ef58a3ba425d1516b5bea2b0738741ea6bce8856e3a0864d88"

      def install
        bin.install "anu"

        # Install shell auto-completion
        (bash_completion/"anu").write(Utils.popen_read("#{bin}/anu completion bash"))
        (zsh_completion/"_anu").write(Utils.popen_read("#{bin}/anu completion zsh"))
      end
    end
  end

  def caveats
    <<~EOS
      Check https://github.com/gocardless/anu for how to configure anu
    EOS
  end

  test do
    system "#{bin}/anu version"
  end
end
