# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
require_relative "../lib/gc/github_private_release_download_strategy"
class GcCli < Formula
  desc "GoCardless CLI"
  homepage "https://github.com/gocardless/gc-cli"
  version "0.0.1-rc2"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/gocardless/gc-cli/releases/download/v0.0.1-rc2/gc-cli_0.0.1-rc2_masOS_arm64.tar.gz"
      sha256 "310ef35edcf8d557cae5da774bedfa2688d662a98e7a0347a3240811e8c8319a"

      def install
        bin.install "gc"

        # Install shell auto-completion
        (bash_completion/"gc").write(Utils.popen_read("#{bin}/gc completion bash"))
        (zsh_completion/"_gc").write(Utils.popen_read("#{bin}/gc completion zsh"))
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/gocardless/gc-cli/releases/download/v0.0.1-rc2/gc-cli_0.0.1-rc2_masOS_x86_64.tar.gz"
      sha256 "2540d9b0762762c949914f50671cbb8e279859339d8c8617689013fe81e5931e"

      def install
        bin.install "gc"

        # Install shell auto-completion
        (bash_completion/"gc").write(Utils.popen_read("#{bin}/gc completion bash"))
        (zsh_completion/"_gc").write(Utils.popen_read("#{bin}/gc completion zsh"))
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/gocardless/gc-cli/releases/download/v0.0.1-rc2/gc-cli_0.0.1-rc2_Linux_arm64.tar.gz"
      sha256 "29ee7ee0ddbfbda31cc91a265a3f5140c327fc6a12ecc3a52e2b2d39343e6def"

      def install
        bin.install "gc"

        # Install shell auto-completion
        (bash_completion/"gc").write(Utils.popen_read("#{bin}/gc completion bash"))
        (zsh_completion/"_gc").write(Utils.popen_read("#{bin}/gc completion zsh"))
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/gocardless/gc-cli/releases/download/v0.0.1-rc2/gc-cli_0.0.1-rc2_Linux_x86_64.tar.gz"
      sha256 "b22de62ae80e64dd18707e1eb3fd91ad3bf8209c7cd8683cb1274bb1f3b6d350"

      def install
        bin.install "gc"

        # Install shell auto-completion
        (bash_completion/"gc").write(Utils.popen_read("#{bin}/gc completion bash"))
        (zsh_completion/"_gc").write(Utils.popen_read("#{bin}/gc completion zsh"))
      end
    end
  end

  def caveats; <<~EOS
    Check https://github.com/gocardless/gc-cli for how to configure the gocardless cli
  EOS
  end

  test do
    system "#{bin}/gc version"
  end
end
