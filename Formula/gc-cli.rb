# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
require_relative "../lib/gc/github_private_release_download_strategy"
class GcCli < Formula
  desc "GoCardless CLI"
  homepage "https://github.com/gocardless/gc-cli"
  version "1.0.1-alpha.2"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/gocardless/cli-releases/releases/download/v1.0.1-alpha.2/gc-cli_1.0.1-alpha.2_masOS_arm64.tar.gz", :using => Gc::GithubPrivateReleaseDownloadStrategy
      sha256 "5cfd960c3c8f090351c81dc82b2ba047f6511696fbd034d0d4ec0a72a112e719"

      def install
        bin.install "gc"
        bin.install_symlink "gc" => "gocardless"

        # Install shell auto-completion
        (bash_completion/"gc").write(Utils.popen_read("#{bin}/gc completion bash"))
        (zsh_completion/"_gc").write(Utils.popen_read("#{bin}/gc completion zsh"))
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/gocardless/cli-releases/releases/download/v1.0.1-alpha.2/gc-cli_1.0.1-alpha.2_masOS_x86_64.tar.gz", :using => Gc::GithubPrivateReleaseDownloadStrategy
      sha256 "66254f694b504574af21b3c06908e1390bb12ee933b83e71f9f0b4d0f362f6b6"

      def install
        bin.install "gc"
        bin.install_symlink "gc" => "gocardless"

        # Install shell auto-completion
        (bash_completion/"gc").write(Utils.popen_read("#{bin}/gc completion bash"))
        (zsh_completion/"_gc").write(Utils.popen_read("#{bin}/gc completion zsh"))
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/gocardless/cli-releases/releases/download/v1.0.1-alpha.2/gc-cli_1.0.1-alpha.2_Linux_arm64.tar.gz", :using => Gc::GithubPrivateReleaseDownloadStrategy
      sha256 "d3cd7209d556a66bcacc2c608bd4a04f20156367014dfbccc83a126661991eb5"

      def install
        bin.install "gc"
        bin.install_symlink "gc" => "gocardless"

        # Install shell auto-completion
        (bash_completion/"gc").write(Utils.popen_read("#{bin}/gc completion bash"))
        (zsh_completion/"_gc").write(Utils.popen_read("#{bin}/gc completion zsh"))
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/gocardless/cli-releases/releases/download/v1.0.1-alpha.2/gc-cli_1.0.1-alpha.2_Linux_x86_64.tar.gz", :using => Gc::GithubPrivateReleaseDownloadStrategy
      sha256 "37e3dd2ae900fa3b7b532fd6f9bddbe4aad20eefb829121d84cd72957940bb50"

      def install
        bin.install "gc"
        bin.install_symlink "gc" => "gocardless"

        # Install shell auto-completion
        (bash_completion/"gc").write(Utils.popen_read("#{bin}/gc completion bash"))
        (zsh_completion/"_gc").write(Utils.popen_read("#{bin}/gc completion zsh"))
      end
    end
  end

  def caveats; <<~EOS
    Check https://github.com/gocardless/gc-cli for how to configure the gocardless cli
  EOS
  end

  test do
    system "#{bin}/gc version"
  end
end
