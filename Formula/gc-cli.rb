# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
require_relative "../lib/gc/github_private_release_download_strategy"
class GcCli < Formula
  desc "GoCardless CLI"
  homepage "https://github.com/gocardless/gc-cli"
  version "0.0.1-rc5"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/gocardless/gc-cli/releases/download/v0.0.1-rc5/gc-cli_0.0.1-rc5_masOS_arm64.tar.gz", :using => Gc::GithubPrivateReleaseDownloadStrategy
      sha256 "6a0e8f905580866a4f364f3608e0157cbc09551c4648b0ef1cb9f6ef27887622"

      def install
        bin.install "gc"

        # Install shell auto-completion
        (bash_completion/"gc").write(Utils.popen_read("#{bin}/gc completion bash"))
        (zsh_completion/"_gc").write(Utils.popen_read("#{bin}/gc completion zsh"))
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/gocardless/gc-cli/releases/download/v0.0.1-rc5/gc-cli_0.0.1-rc5_masOS_x86_64.tar.gz", :using => Gc::GithubPrivateReleaseDownloadStrategy
      sha256 "e4024ef3cc94352daa6f96d273e86d6bd45839f8b4b95f7e91672bf02a7f2fc4"

      def install
        bin.install "gc"

        # Install shell auto-completion
        (bash_completion/"gc").write(Utils.popen_read("#{bin}/gc completion bash"))
        (zsh_completion/"_gc").write(Utils.popen_read("#{bin}/gc completion zsh"))
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/gocardless/gc-cli/releases/download/v0.0.1-rc5/gc-cli_0.0.1-rc5_Linux_arm64.tar.gz", :using => Gc::GithubPrivateReleaseDownloadStrategy
      sha256 "78fbe1dcfd3050843e9910e3f409115098c8143dac3febe6eea8c1e61d8ecfc8"

      def install
        bin.install "gc"

        # Install shell auto-completion
        (bash_completion/"gc").write(Utils.popen_read("#{bin}/gc completion bash"))
        (zsh_completion/"_gc").write(Utils.popen_read("#{bin}/gc completion zsh"))
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/gocardless/gc-cli/releases/download/v0.0.1-rc5/gc-cli_0.0.1-rc5_Linux_x86_64.tar.gz", :using => Gc::GithubPrivateReleaseDownloadStrategy
      sha256 "a5513818d69755db5b218bdcd77220cae7f7ba75d15da8f10a714f940b61bd5f"

      def install
        bin.install "gc"

        # Install shell auto-completion
        (bash_completion/"gc").write(Utils.popen_read("#{bin}/gc completion bash"))
        (zsh_completion/"_gc").write(Utils.popen_read("#{bin}/gc completion zsh"))
      end
    end
  end

  def caveats; <<~EOS
    Check https://github.com/gocardless/gc-cli for how to configure the gocardless cli
  EOS
  end

  test do
    system "#{bin}/gc version"
  end
end
