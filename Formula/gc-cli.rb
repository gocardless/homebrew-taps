# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
require_relative "../lib/gc/github_private_release_download_strategy"
class GcCli < Formula
  desc "GoCardless CLI"
  homepage "https://github.com/gocardless/gc-cli"
  version "1.0.0-alpha.2"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/gocardless/gc-cli/releases/download/v1.0.0-alpha.2/gc-cli_1.0.0-alpha.2_masOS_arm64.tar.gz", :using => Gc::GithubPrivateReleaseDownloadStrategy
      sha256 "289f453b9043399c5a4cdf321fdb713f0f4323fd1fe8577073f093b3044ae3dc"

      def install
        bin.install "gc"
        bin.install_symlink "gc" => "gocardless"

        # Install shell auto-completion
        (bash_completion/"gc").write(Utils.popen_read("#{bin}/gc completion bash"))
        (zsh_completion/"_gc").write(Utils.popen_read("#{bin}/gc completion zsh"))
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/gocardless/gc-cli/releases/download/v1.0.0-alpha.2/gc-cli_1.0.0-alpha.2_masOS_x86_64.tar.gz", :using => Gc::GithubPrivateReleaseDownloadStrategy
      sha256 "c607dc130c7ae298c4eb0ae4e6721aaa57c463bfe9e133d266abf55d8f0df148"

      def install
        bin.install "gc"
        bin.install_symlink "gc" => "gocardless"

        # Install shell auto-completion
        (bash_completion/"gc").write(Utils.popen_read("#{bin}/gc completion bash"))
        (zsh_completion/"_gc").write(Utils.popen_read("#{bin}/gc completion zsh"))
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/gocardless/gc-cli/releases/download/v1.0.0-alpha.2/gc-cli_1.0.0-alpha.2_Linux_arm64.tar.gz", :using => Gc::GithubPrivateReleaseDownloadStrategy
      sha256 "e48c90b03a2b8580a04886c6fcd241c8dbaef85ae90fca9af0080969354055d5"

      def install
        bin.install "gc"
        bin.install_symlink "gc" => "gocardless"

        # Install shell auto-completion
        (bash_completion/"gc").write(Utils.popen_read("#{bin}/gc completion bash"))
        (zsh_completion/"_gc").write(Utils.popen_read("#{bin}/gc completion zsh"))
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/gocardless/gc-cli/releases/download/v1.0.0-alpha.2/gc-cli_1.0.0-alpha.2_Linux_x86_64.tar.gz", :using => Gc::GithubPrivateReleaseDownloadStrategy
      sha256 "004565ef0d897739d4b6b35dfb26985326cd23a322fc8ac902bddf47cf4e8db9"

      def install
        bin.install "gc"
        bin.install_symlink "gc" => "gocardless"

        # Install shell auto-completion
        (bash_completion/"gc").write(Utils.popen_read("#{bin}/gc completion bash"))
        (zsh_completion/"_gc").write(Utils.popen_read("#{bin}/gc completion zsh"))
      end
    end
  end

  def caveats; <<~EOS
    Check https://github.com/gocardless/gc-cli for how to configure the gocardless cli
  EOS
  end

  test do
    system "#{bin}/gc version"
  end
end
